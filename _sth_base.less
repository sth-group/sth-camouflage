//// Sth less mixins.
//// Created by: Krzysztof Węgliński
//// Company: Sth
//// Author URL: http://csth.pl
//// April 2015.
// settings
// mixins
@import "_sth_typo.less";
@import "_reset.less";

// font-face mixin
.font-face(@name, @fontsPath) {
  @font-face {
    font-family: @name;
    src: ~"url(@{fontsPath}/@{name}/@{name}.eot)";
    src: ~"url(@{fontsPath}/@{name}/@{name}.eot?#iefix) format('embedded-opentype'), url('@{fontsPath}/@{name}/@{name}.woff') format('woff'), url('@{fontsPath}/@{name}/@{name}.ttf') format('truetype')";
    font-weight: normal;
    font-style: normal;
  }
}


//for loops
.for(@i, @n) {
  .-each(@i)
}
.for(@n) when (isnumber(@n)) {
  .for(1, @n)
}
.for(@i, @n) when not (@i = @n) {
  .for((@i + (@n - @i) / abs(@n - @i)), @n);
}
// .for-each

.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

// ex
// 	.rem(38);
//	.padding: @rem;
.rem(@px) {
  @calc: (@px / @font-size-base);
  @rem: ~"@{calc}rem";
}

// ex. font-size(38);
.font-size(@px, @lh: 1.4) {
  @font-size: (@px / @font-size-base);
  font-size: ~"@{font-size}rem";
  line-height: @lh;
}

//ex. dims(120px, 40px);
.dims(@wh, @hh) {
  width: @wh;
  height: @hh;
}

//ex. rem-dims(120, 40);
.dims-rem(@wh, @hh) {
  @width: (@wh / @font-size-base);
  @height: (@hh / @font-size-base);
  width: ~"@{width}rem";
  height: ~"@{height}rem";
}

//ex .marg(51, 20, 46, 20);
.marg(@mt: 0; @mr: 0; @mb: 0; @ml: 0; @im: ''; ) {
  @mtv: (@mt / @font-size-base);
  @mrv: (@mr / @font-size-base);
  @mbv: (@mb / @font-size-base);
  @mlv: (@ml / @font-size-base);
  margin: 0;
}
.marg-auto(@mt: 0; @mb: 0; @im: ''; ) {
  @mtv: (@mt / @font-size-base);
  @mbv: (@mb / @font-size-base);
  margin: ~"@{mtv}rem" ~"auto" ~"@{mbv}rem";
}

//ex .padd(51, 20, 46, 20);
.padd(@pt: 0; @pr: 0; @pb: 0; @pl: 0; ) {
  @ptv: (@pt / @font-size-base);
  @prv: (@pr / @font-size-base);
  @pbv: (@pb / @font-size-base);
  @plv: (@pl / @font-size-base);
  padding: ~"@{ptv}rem" ~"@{prv}rem" ~"@{pbv}rem" ~"@{plv}rem";
}

/// ex. .rad-border(#0f0f0f, 1px, solid, 6px, 6px, 2px, 2px);
.rad-border(@color: #000; @weight: 1; @type: solid; @t: 0; @r: 0; @b: 0; @l: 0; ) {
  border: @weight @type @color;
  border-radius: @t @r @b @l;
}

// gradients
.gradient (@startColor: #eee, @endColor: white) {
  background-color: @startColor;
  background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
  background: -webkit-linear-gradient(top, @startColor, @endColor);
  background: -moz-linear-gradient(top, @startColor, @endColor);
  background: -ms-linear-gradient(top, @startColor, @endColor);
  background: -o-linear-gradient(top, @startColor, @endColor);
}

// box-shadow
.box-shadow(@props) {
  -webkit-box-shadow: @props;
  -moz-box-shadow: @props;
  -o-box-shadow: @props;
  box-shadow: @props;
}
.clearfix {
  zoom: 1;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}
.base-after(@wh, @hh, @cont, @pos) {
  width: @wh;
  height: @hh;
  content: @cont;
  position: @pos;
}
.background-size(@val) {
  -webkit-background-size: @val;
  -moz-background-size: @val;
  -o-background-size: @val;
  background-size: @val;
}
.clearfix:after {
  content: "";
  display: table;
  clear: both;
}
.transition (@transition) {
  -webkit-transition: @transition;
  -moz-transition: @transition;
  -ms-transition: @transition;
  -o-transition: @transition;
}
.fixed(@top: 0px, @left: 0px, @index: 0, @wh: 100%, @hh: 100px) {
  z-index: @index;
  position: fixed;
  top: @top;
  left: @left;
  width: @wh;
  height: @hh;
}
.max-width(@wh: 0, @mt: 0, @mr: auto, @mb: 0, @ml: auto, @im: '') {
  margin: 0;
  max-width: @wh;
  width: 100%;
  display: block;
}
.filter(@val) {
  filter:@val;
  -webkit-filter: @val;
  -moz-filter: @val;
  -ms-filter: @val;
  -o-filter: @val;
}
